name: Build and test spring gradle application

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_URL: jdbc:postgresql://localhost:${POSTGRES_LOCAL_PORT}/${POSTGRES_DATABASE}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: password
      rabbitmq:
        image: rabbitmq:management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17-ea'
          distribution: 'temurin'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build backend application
        uses: gradle/gradle-build-action@v2.7.1
        with:
          arguments: build --no-daemon
      - name: Run production backend application
        uses: gradle/gradle-build-action@v2.7.1
        with:
          arguments: bootRun --args='--spring.profiles.active=prod' --no-daemon