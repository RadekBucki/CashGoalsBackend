extend type Mutation {
    updateGoals(budgetId: UUID!, goals: [GoalInput!]!): [Goal!]!
    deleteGoals(budgetId: UUID!, goalIds: [ID!]!): Boolean!
}

extend type Query {
    goals(budgetId: UUID!): [Goal!]!
    goalResults(budgetId: UUID!, month: Int!, year: Int!): [GoalResult!]!
}

input GoalInput {
    id: ID
    name: String!
    description: String
    type: GoalType!
    min: Float
    max: Float
    categoryId: ID!
}
type Goal {
    id: ID!
    name: String!
    description: String
    type: GoalType!
    min: Float
    max: Float
    category: Category!
}

type GoalResult {
    goal: Goal!
    actual: Float!
    reached: Boolean!
}

enum GoalType {
    AMOUNT
    PERCENTAGE
}